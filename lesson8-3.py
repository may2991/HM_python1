# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class MyException(Exception):

    def __init__(self):
        print("НЕКОРРЕКТНЫЙ ВВОД!")

    @staticmethod
    def validation_el(num):
        f_float = False
        for index, el in enumerate(num):
            if not el.isdigit():
                if el == '.' and index != 0 and not f_float and len(num) > index + 1:
                    f_float = True
                elif el == '-' and index == 0 and len(num) > 1:
                    break
                else:
                    raise MyException


correct_list = list()
while True:
    a = input("введите число списка, по окончании ввода введите stop")
    if a != 'stop':
        try:
            MyException.validation_el(a)
        except MyException:
            pass
        else:
            correct_list.append(a)
    elif a == "stop":
        print(f"введеный список: {correct_list}")
        break
